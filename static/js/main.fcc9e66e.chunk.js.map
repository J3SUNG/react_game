{"version":3,"sources":["components/Navigation.js","routes/Home/Home.jsx","routes/GuGuDan/GuGuDan.jsx","routes/WordRelay/WordRelay.jsx","routes/NumberBaseball/try.jsx","routes/NumberBaseball/NumberBaseball.jsx","routes/ResponseCheck/ResponseCheck.jsx","routes/RSP/RSP.jsx","routes/Lotto/Ball.jsx","routes/Lotto/Lotto.jsx","routes/TicTacToe/Td.jsx","routes/TicTacToe/Tr.jsx","routes/TicTacToe/Table.jsx","routes/TicTacToe/TicTacToe.jsx","routes/MineSearch/Td.jsx","routes/MineSearch/Tr.jsx","routes/MineSearch/Table.jsx","routes/MineSearch/Form.jsx","routes/MineSearch/MineSearch.jsx","App.jsx","index.jsx"],"names":["Navigation","className","to","Home","React","require","useState","useRef","GuGuDan","Math","ceil","random","first","setFirst","second","setSecond","value","setValue","result","setResult","inputRef","onSubmit","e","preventDefault","parseInt","current","focus","ref","onChange","target","id","WordRelay","word","setWord","length","htmlFor","Try","memo","tryInfo","try","getNumbers","candiate","array","i","chosen","splice","floor","push","NumberBaseball","answer","setAnswer","tries","setTries","join","prevTries","alert","answerArray","split","map","v","strike","ball","includes","maxLength","ResponseCheck_hooks","state","setState","message","setMessage","timeout","startTime","endTime","onClick","setTimeout","Date","clearTimeout","prevResult","reduce","a","c","rspCoords","rock","scissors","paper","scores","RSP_hooks","imgCoord","setImgCoord","score","setScore","interval","useEffect","setInterval","changeHand","clearInterval","onClickBtn","choice","diff","Object","entries","find","computerChoice","prevScore","style","background","Ball","number","getWinNumbers","console","log","Array","fill","shuffle","bonusNumber","winNumbers","slice","sort","p","Lotto_hooks","lottoNumbers","useMemo","setWinNumbers","winBalls","setWinBalls","bonus","setBonus","redo","setRedo","timeouts","prevBalls","forEach","onClickRedo","useCallback","Td","rowIndex","cellIndex","dispatch","cellData","onClickTd","type","CLICK_CELL","row","cell","Tr","rowData","td","Table","tableData","tr","initialState","winner","turn","recentCell","SET_WINNER","CHANGE_TURN","RESET_GAME","reducer","action","TicTacToe","useReducer","onClickTable","win","all","getTdStyle","code","CODE","NORMAL","MINE","CLICKED_MINE","OPENED","QUESTION_MINE","QUESTION","FLAG_MINE","FLAG","getTdText","useContext","TableContext","halted","OPEN_CELL","CLICK_MINE","onRightClickTd","FLAG_CELL","QUESTION_CELL","NORMALIZE_CELL","RealTd","data","onContextMenu","Form","setRow","setCell","mine","setMine","onChangeRow","onChangeCell","onChangeMine","START_GAME","placeholder","createContext","timer","openedCount","plantMine","candidate","arr","j","k","ver","hor","INCREMENT_TIMER","checked","checkAround","around","concat","count","filter","near","n","MineSearch","Provider","App","path","exact","component","ResponseCheck","RSP","Lotto","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fcc9e66e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Navigation.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Navigation() {\n  return (\n    <div className=\"nav\">\n      <div className=\"component\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/GuGuDan\">GuGuDan</Link>\n        <Link to=\"/WordRelay\">WordRelay</Link>\n        <Link to=\"/NumberBaseball\">NumberBaseball</Link>\n        <Link to=\"/ResponseCheck\">ResponseCheck</Link>\n        <Link to=\"/RSP\">RSP</Link>\n        <Link to=\"/Lotto\">Lotto</Link>\n        <Link to=\"/TicTacToe\">TicTacToe</Link>\n        <Link to=\"/MineSearch\">MineSearch</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport \"./Home.css\";\n\nconst Home = () => {\n  return (\n    <>\n      <div>Welcome, game world! Click to the game.</div>\n    </>\n  );\n};\n\nexport default Home;\n","const React = require(\"react\");\nconst { useState, useRef } = React;\n\nconst GuGuDan = () => {\n  const [first, setFirst] = useState(Math.ceil(Math.random() * 9));\n  const [second, setSecond] = useState(Math.ceil(Math.random() * 9));\n  const [value, setValue] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const inputRef = useRef(null);\n\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n    if (parseInt(value) === first * second) {\n      setResult(\"정답: \" + value);\n      setFirst(Math.ceil(Math.random() * 9));\n      setSecond(Math.ceil(Math.random() * 9));\n      setValue(\"\");\n    } else {\n      setResult(\"땡\");\n      setValue(\"\");\n    }\n    inputRef.current.focus();\n  };\n\n  const onChangeInput = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <>\n      <div>\n        {first} 곱하기 {second}는?\n      </div>\n      <form onSubmit={onSubmitForm}>\n        <input ref={inputRef} onChange={onChangeInput} value={value} />\n        <button>입력!</button>\n      </form>\n      <div id=\"result\">{result}</div>\n    </>\n  );\n};\n\nexport default GuGuDan;\n","const React = require(\"react\");\nconst { useState, useRef } = React;\n\nconst WordRelay = () => {\n  const [word, setWord] = useState(\"J3SUNG\");\n  const [value, setValue] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const inputRef = useRef(null);\n\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n    if (word[word.length - 1] === value[0]) {\n      setResult(\"딩동댕\");\n      setWord(value);\n      setValue(\"\");\n    } else {\n      setResult(\"땡\");\n      setValue(\"\");\n    }\n    inputRef.current.focus();\n  };\n\n  const onChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <>\n      <div>{word}</div>\n      <form onSubmit={onSubmitForm}>\n        <label htmlFor=\"wordInput\">글자를 입력하세요.</label>\n        <input\n          id=\"wordInput\"\n          className=\"wordInput\"\n          ref={inputRef}\n          value={value}\n          onChange={onChange}\n        />\n        <button>입력!!!</button>\n      </form>\n      <div>{result}</div>\n    </>\n  );\n};\n\nexport default WordRelay;\n","import React, { PureComponent, memo } from \"react\";\r\n\r\n// class Try extends PureComponent {\r\n//   render() {\r\n//     const { tryInfo } = this.props;\r\n//     return (\r\n//       <li>\r\n//         <div>{tryInfo.try}</div>\r\n//         <div>{tryInfo.result}</div>\r\n//         <div>{tryInfo.result}</div>\r\n//       </li>\r\n//     );\r\n//   }\r\n// }\r\n\r\nconst Try = memo(({ tryInfo }) => {\r\n  return (\r\n    <li>\r\n      <div>{tryInfo.try}</div>\r\n      <div>{tryInfo.result}</div>\r\n    </li>\r\n  );\r\n});\r\n\r\nexport default Try;\r\n","import React, { useRef, useState, memo } from \"react\";\nimport Try from \"./try\";\n\nfunction getNumbers() {\n  const candiate = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const array = [];\n  for (let i = 0; i < 4; i += 1) {\n    const chosen = candiate.splice(Math.floor(Math.random() * (9 - i)), 1)[0];\n    array.push(chosen);\n  }\n  return array;\n}\n\nconst NumberBaseball = memo(() => {\n  const [result, setResult] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const [answer, setAnswer] = useState(getNumbers());\n  const [tries, setTries] = useState([]);\n  const inputRef = useRef(null);\n\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n    if (value === answer.join(\"\")) {\n      setResult(\"홈런!\");\n      setTries((prevTries) => [...prevTries, { try: value, result: \"홈런\" }]);\n      alert(\"게임을 다시 시작합니다.\");\n      setValue(\"\");\n      setAnswer(getNumbers());\n      setTries([]);\n    } else {\n      const answerArray = value.split(\"\").map((v) => parseInt(v));\n      let strike = 0;\n      let ball = 0;\n      if (tries.length >= 9) {\n        setResult(`10번 넘게 틀려서 실패! 답은 ${answer.join(\",\")}였습니다.`);\n        alert(\"게임을 다시 시작합니다.\");\n        setValue(\"\");\n        setAnswer(getNumbers());\n        setTries([]);\n      } else {\n        for (let i = 0; i < 4; i += 1) {\n          if (answerArray[i] === answer[i]) {\n            strike += 1;\n          } else if (answer.includes(answerArray[i])) {\n            ball += 1;\n          }\n        }\n        setTries((prevTries) => [\n          ...prevTries,\n          { try: value, result: `${strike} 스트라이크, ${ball} 볼입니다.` },\n        ]);\n        setValue(\"\");\n      }\n    }\n    inputRef.current.focus();\n  };\n\n  const onChangeInput = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <>\n      <h1>{result}</h1>\n      <form onSubmit={onSubmitForm}>\n        <input\n          ref={inputRef}\n          maxLength={4}\n          value={value}\n          onChange={onChangeInput}\n        />\n      </form>\n      <div>시도: {tries.length}</div>\n      <ul>\n        {tries.map((v, i) => {\n          return <Try key={`${i + 1}차 시도 : `} tryInfo={v} />;\n        })}\n      </ul>\n    </>\n  );\n});\n\nexport default NumberBaseball;\n","import React, { useState, useRef } from \"react\";\nimport \"./ResponseCheck.css\";\n\nconst ResponseCheck_hooks = () => {\n  const [state, setState] = useState(\"waiting\");\n  const [message, setMessage] = useState(\"클릭해서 시작하세요.\");\n  const [result, setResult] = useState([]);\n  const timeout = useRef(null);\n  const startTime = useRef();\n  const endTime = useRef();\n\n  const onClickScreen = () => {\n    if (state === \"waiting\") {\n      setState(\"ready\");\n      setMessage(\"초록색이 되면 클릭하세요.\");\n      timeout.current = setTimeout(() => {\n        setState(\"now\");\n        setMessage(\"클릭\");\n        setResult([]);\n        startTime.current = new Date();\n      }, Math.floor(Math.random() * 1000) + 2000);\n    } else if (state === \"ready\") {\n      clearTimeout(timeout.current);\n      setState(\"waiting\");\n      setMessage(\"초록색이 된 후에 클릭하세요.\");\n    } else if (state === \"now\") {\n      endTime.current = new Date();\n      setState(\"waiting\");\n      setMessage(\"클릭해서 시작해주세요.\");\n      setResult((prevResult) => {\n        return [...prevResult, endTime.current - startTime.current];\n      });\n    }\n  };\n\n  const renderAverage = () => {\n    return result.length === 0 ? null : (\n      <div>\n        평균 시간: {result.reduce((a, c) => a + c) / result.length}\n        ms\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <div id=\"screen\" className={state} onClick={onClickScreen}>\n        {message}\n      </div>\n      {renderAverage()}\n    </>\n  );\n};\n\nexport default ResponseCheck_hooks;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./RSP.css\";\n\nconst rspCoords = {\n  rock: 0,\n  scissors: -142,\n  paper: -284,\n};\n\nconst scores = {\n  scissors: 1,\n  rock: 0,\n  paper: -1,\n};\n\nconst computerChoice = (imgCoord) => {\n  return Object.entries(rspCoords).find(function (v) {\n    return v[1] === imgCoord;\n  })[0];\n};\n\nconst RSP_hooks = () => {\n  const [result, setResult] = useState(\"\");\n  const [imgCoord, setImgCoord] = useState(rspCoords.rock);\n  const [score, setScore] = useState(0);\n  const interval = useRef();\n\n  useEffect(() => {\n    interval.current = setInterval(changeHand, 100);\n    return () => {\n      clearInterval(interval.current);\n    };\n  }, [imgCoord]);\n\n  const changeHand = () => {\n    if (imgCoord === rspCoords.rock) {\n      setImgCoord(rspCoords.scissors);\n    } else if (imgCoord === rspCoords.scissors) {\n      setImgCoord(rspCoords.paper);\n    } else if (imgCoord === rspCoords.paper) {\n      setImgCoord(rspCoords.rock);\n    }\n  };\n\n  const onClickBtn = (choice) => () => {\n    clearInterval(interval.current);\n    const myScore = scores[choice];\n    const cpuScore = scores[computerChoice(imgCoord)];\n    const diff = myScore - cpuScore;\n    if (diff === 0) {\n      setResult(\"비겼습니다.\");\n    } else if ([-1, 2].includes(diff)) {\n      setResult(\"이겼습니다.\");\n      setScore((prevScore) => prevScore + 1);\n    } else {\n      setResult(\"졌습니다.\");\n      setScore((prevScore) => prevScore - 1);\n    }\n    setTimeout(() => {\n      interval.current = setInterval(changeHand, 100);\n    }, 1000);\n  };\n  return (\n    <>\n      <div\n        id=\"computer\"\n        style={{\n          background: `url(https://en.pimg.jp/023/182/267/1/23182267.jpg) ${imgCoord}px 0`,\n        }}\n      />\n      <div>\n        <button id=\"rock\" className=\"btn\" onClick={onClickBtn(\"rock\")}>\n          바위\n        </button>\n        <button id=\"scissor\" className=\"btn\" onClick={onClickBtn(\"scissors\")}>\n          가위\n        </button>\n        <button id=\"paper\" className=\"btn\" onClick={onClickBtn(\"paper\")}>\n          보\n        </button>\n      </div>\n      <div>{result}</div>\n      <div>현재 {score}점</div>\n    </>\n  );\n};\n\nexport default RSP_hooks;\n","import React, { memo } from \"react\";\r\n\r\nconst Ball = memo(({ number }) => {\r\n  let background;\r\n  if (number < 10) {\r\n    background = \"red\";\r\n  } else if (number < 20) {\r\n    background = \"orange\";\r\n  } else if (number < 30) {\r\n    background = \"yellow\";\r\n  } else if (number < 40) {\r\n    background = \"blue\";\r\n  } else {\r\n    background = \"green\";\r\n  }\r\n  return (\r\n    <div className=\"ball\" style={{ background }}>\r\n      {number}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Ball;\r\n","import React, {\n  useState,\n  useRef,\n  useEffect,\n  useMemo,\n  useCallback,\n} from \"react\";\nimport Ball from \"./Ball\";\nimport \"./Lotto.css\";\n\nfunction getWinNumbers() {\n  console.log(\"getWinNumbers\");\n  const candiate = Array(45)\n    .fill()\n    .map((v, i) => i + 1);\n  const shuffle = [];\n  while (candiate.length > 0) {\n    shuffle.push(\n      candiate.splice(Math.floor(Math.random() * candiate.length), 1)[0]\n    );\n  }\n  const bonusNumber = shuffle[shuffle.length - 1];\n  const winNumbers = shuffle.slice(0, 6).sort((p, c) => p - c);\n  return [...winNumbers, bonusNumber];\n}\n\nconst Lotto_hooks = () => {\n  const lottoNumbers = useMemo(() => getWinNumbers(), []);\n  const [winNumbers, setWinNumbers] = useState(lottoNumbers);\n  const [winBalls, setWinBalls] = useState([]);\n  const [bonus, setBonus] = useState(null);\n  const [redo, setRedo] = useState(false);\n  const timeouts = useRef([]);\n\n  useEffect(() => {\n    console.log(\"useEffect\");\n    for (let i = 0; i < winNumbers.length - 1; ++i) {\n      timeouts.current[i] = setTimeout(() => {\n        setWinBalls((prevBalls) => [...prevBalls, winNumbers[i]]);\n      }, (i + 1) * 1000);\n    }\n    timeouts.current[6] = setTimeout(() => {\n      setBonus(winNumbers[6]);\n      setRedo(true);\n    }, 7000);\n    return () => {\n      timeouts.current.forEach((v) => {\n        clearTimeout(v);\n      });\n    };\n  }, [timeouts.current]);\n\n  const onClickRedo = useCallback(() => {\n    setWinNumbers(getWinNumbers());\n    setWinBalls([]);\n    setBonus(null);\n    setRedo(false);\n    timeouts.current = [];\n  });\n\n  return (\n    <>\n      <div>당첨 숫자</div>\n      <div id=\"결과창\">\n        {winBalls.map((v) => (\n          <Ball key={v} number={v} />\n        ))}\n      </div>\n      <div>보너스!</div>\n      {bonus && <Ball number={bonus} />}\n      {redo && <button onClick={onClickRedo}>한번더!</button>}\n    </>\n  );\n};\n\nexport default Lotto_hooks;\n","import React, { useCallback, memo } from \"react\";\r\nimport { CLICK_CELL } from \"./TicTacToe\";\r\n\r\nconst Td = memo(({ rowIndex, cellIndex, dispatch, cellData }) => {\r\n  const onClickTd = useCallback(() => {\r\n    console.log(rowIndex, cellIndex);\r\n    if (cellData) {\r\n      return;\r\n    }\r\n    dispatch({ type: CLICK_CELL, row: rowIndex, cell: cellIndex });\r\n  }, [cellData]);\r\n\r\n  return <td onClick={onClickTd}>{cellData}</td>;\r\n});\r\n\r\nexport default Td;\r\n","import React, { memo } from \"react\";\r\nimport Td from \"./Td\";\r\n\r\nconst Tr = memo(({ rowData, rowIndex, dispatch }) => {\r\n  return (\r\n    <tr>\r\n      {Array(rowData.length)\r\n        .fill()\r\n        .map((td, i) => (\r\n          <Td\r\n            key={i}\r\n            dispatch={dispatch}\r\n            rowIndex={rowIndex}\r\n            cellIndex={i}\r\n            cellData={rowData[i]}\r\n          >\r\n            {\"\"}\r\n          </Td>\r\n        ))}\r\n    </tr>\r\n  );\r\n});\r\n\r\nexport default Tr;\r\n","import React from \"react\";\r\nimport Tr from \"./Tr\";\r\n\r\nconst Table = ({ onClick, tableData, dispatch }) => {\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        {Array(tableData.length)\r\n          .fill()\r\n          .map((tr, i) => (\r\n            <Tr\r\n              key={i}\r\n              dispatch={dispatch}\r\n              rowIndex={i}\r\n              rowData={tableData[i]}\r\n            />\r\n          ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useEffect, useReducer, useCallback } from \"react\";\nimport Table from \"./Table\";\nimport \"./TicTacToe.css\";\n\nconst initialState = {\n  winner: \"\",\n  turn: \"O\",\n  tableData: [\n    [\"\", \"\", \"\"],\n    [\"\", \"\", \"\"],\n    [\"\", \"\", \"\"],\n  ],\n  recentCell: [-1, -1],\n};\n\nexport const SET_WINNER = \"SET_WINNER\";\nexport const CLICK_CELL = \"CLICK_CELL\";\nexport const CHANGE_TURN = \"CHANGE_TURN\";\nexport const RESET_GAME = \"RESET_GAME\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_WINNER:\n      return {\n        ...state,\n        winner: action.winner,\n      };\n    case CLICK_CELL: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...tableData[action.row]];\n      tableData[action.row][action.cell] = state.turn;\n      return {\n        ...state,\n        tableData,\n        recentCell: [action.row, action.cell],\n      };\n    }\n    case CHANGE_TURN: {\n      return {\n        ...state,\n        turn: state.turn === \"O\" ? \"X\" : \"O\",\n      };\n    }\n    case RESET_GAME: {\n      return {\n        ...state,\n        tableData: [\n          [\"\", \"\", \"\"],\n          [\"\", \"\", \"\"],\n          [\"\", \"\", \"\"],\n        ],\n        recentCell: [-1, -1],\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst TicTacToe = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { tableData, turn, winner, recentCell } = state;\n  const onClickTable = useCallback(() => {\n    dispatch({ type: SET_WINNER, winner: \"O\" });\n  }, []);\n\n  useEffect(() => {\n    const [row, cell] = recentCell;\n    if (row < 0) {\n      return;\n    }\n    let win = false;\n    if (\n      tableData[row][0] === turn &&\n      tableData[row][1] === turn &&\n      tableData[row][2] === turn\n    ) {\n      win = true;\n    }\n    if (\n      tableData[0][cell] === turn &&\n      tableData[1][cell] === turn &&\n      tableData[2][cell] === turn\n    ) {\n      win = true;\n    }\n    if (\n      tableData[0][0] === turn &&\n      tableData[1][1] === turn &&\n      tableData[2][2] === turn\n    ) {\n      win = true;\n    }\n    if (\n      tableData[0][2] === turn &&\n      tableData[1][1] === turn &&\n      tableData[2][0] === turn\n    ) {\n      win = true;\n    }\n    if (win) {\n      dispatch({ type: SET_WINNER, winner: turn });\n      dispatch({ type: RESET_GAME });\n    } else {\n      let all = true;\n      tableData.forEach((row) => {\n        row.forEach((cell) => {\n          if (!cell) {\n            all = false;\n          }\n        });\n      });\n      if (all) {\n        dispatch({ type: RESET_GAME });\n      } else {\n        dispatch({ type: CHANGE_TURN });\n      }\n    }\n  }, [recentCell]);\n\n  return (\n    <>\n      <Table\n        onClick={onClickTable}\n        tableData={state.tableData}\n        dispatch={dispatch}\n      />\n      {state.winner && <div>{state.winner}님의 승리</div>}\n    </>\n  );\n};\n\nexport default TicTacToe;\n","import React, { useContext, useCallback, useMemo, memo } from \"react\";\r\nimport {\r\n  CLICK_MINE,\r\n  CODE,\r\n  FLAG_CELL,\r\n  NORMALIZE_CELL,\r\n  OPEN_CELL,\r\n  QUESTION_CELL,\r\n  TableContext,\r\n} from \"./MineSearch\";\r\n\r\nconst getTdStyle = (code) => {\r\n  switch (code) {\r\n    case CODE.NORMAL:\r\n    case CODE.MINE:\r\n      return {\r\n        background: \"#444\",\r\n      };\r\n    case CODE.CLICKED_MINE:\r\n    case CODE.OPENED:\r\n      return {\r\n        background: \"white\",\r\n      };\r\n    case CODE.QUESTION_MINE:\r\n    case CODE.QUESTION:\r\n      return {\r\n        background: \"yellow\",\r\n      };\r\n    case CODE.FLAG_MINE:\r\n    case CODE.FLAG:\r\n      return {\r\n        background: \"red\",\r\n      };\r\n    default:\r\n      return {\r\n        background: \"white\",\r\n      };\r\n  }\r\n};\r\n\r\nconst getTdText = (code) => {\r\n  console.log(\"getTdtext\");\r\n  switch (code) {\r\n    case CODE.NORMAL:\r\n      return \"\";\r\n    case CODE.MINE:\r\n      return \"X\";\r\n    case CODE.CLICKED_MINE:\r\n      return \"펑\";\r\n    case CODE.FLAG_MINE:\r\n    case CODE.FLAG:\r\n      return \"!\";\r\n    case CODE.QUESTION_MINE:\r\n    case CODE.QUESTION:\r\n      return \"?\";\r\n    default:\r\n      return code || \"\";\r\n  }\r\n};\r\n\r\nconst Td = memo(({ rowIndex, cellIndex }) => {\r\n  const { tableData, dispatch, halted } = useContext(TableContext);\r\n\r\n  const onClickTd = useCallback(() => {\r\n    if (halted) {\r\n      return;\r\n    }\r\n    switch (tableData[rowIndex][cellIndex]) {\r\n      case CODE.OPENED:\r\n      case CODE.FLAG_MINE:\r\n      case CODE.FLAG:\r\n      case CODE.QUESTION_MINE:\r\n      case CODE.QUESTION:\r\n        return;\r\n      case CODE.NORMAL:\r\n        dispatch({ type: OPEN_CELL, row: rowIndex, cell: cellIndex });\r\n        return;\r\n      case CODE.MINE:\r\n        dispatch({ type: CLICK_MINE, row: rowIndex, cell: cellIndex });\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  }, [tableData[rowIndex][cellIndex], halted]);\r\n\r\n  const onRightClickTd = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (halted) {\r\n        return;\r\n      }\r\n      switch (tableData[rowIndex][cellIndex]) {\r\n        case CODE.NORMAL:\r\n        case CODE.MINE:\r\n          dispatch({ type: FLAG_CELL, row: rowIndex, cell: cellIndex });\r\n          return;\r\n        case CODE.FLAG_MINE:\r\n        case CODE.FLAG:\r\n          dispatch({ type: QUESTION_CELL, row: rowIndex, cell: cellIndex });\r\n          return;\r\n        case CODE.QUESTION_MINE:\r\n        case CODE.QUESTION:\r\n          dispatch({ type: NORMALIZE_CELL, row: rowIndex, cell: cellIndex });\r\n          return;\r\n        default:\r\n          return;\r\n      }\r\n    },\r\n    [tableData[rowIndex][cellIndex], halted]\r\n  );\r\n\r\n  console.log(\"td rendered\");\r\n\r\n  return (\r\n    <RealTd\r\n      onClickTd={onClickTd}\r\n      onRightClickTd={onRightClickTd}\r\n      data={tableData[rowIndex][cellIndex]}\r\n    />\r\n  );\r\n});\r\n\r\nconst RealTd = memo(({ onClickTd, onRightClickTd, data }) => {\r\n  console.log(\"real td rendered\");\r\n  return (\r\n    <td\r\n      style={getTdStyle(data)}\r\n      onClick={onClickTd}\r\n      onContextMenu={onRightClickTd}\r\n    >\r\n      {getTdText(data)}\r\n    </td>\r\n  );\r\n});\r\n\r\nexport default Td;\r\n","import React, { useContext, memo } from \"react\";\r\nimport { TableContext } from \"./MineSearch\";\r\nimport Td from \"./Td\";\r\n\r\nconst Tr = memo(({ rowIndex }) => {\r\n  const { tableData } = useContext(TableContext);\r\n  return (\r\n    <tr>\r\n      {tableData[0] &&\r\n        Array(tableData[0].length)\r\n          .fill()\r\n          .map((td, i) => <Td key={i} rowIndex={rowIndex} cellIndex={i} />)}\r\n    </tr>\r\n  );\r\n});\r\n\r\nexport default Tr;\r\n","import React, { useContext, memo } from \"react\";\r\nimport Tr from \"./Tr\";\r\nimport { TableContext } from \"./MineSearch\";\r\n\r\nconst Table = memo(() => {\r\n  const { tableData } = useContext(TableContext);\r\n  return (\r\n    <table>\r\n      {Array(tableData.length)\r\n        .fill()\r\n        .map((tr, i) => (\r\n          <Tr rowIndex={i} />\r\n        ))}\r\n    </table>\r\n  );\r\n});\r\nexport default Table;\r\n","import React, { useState, useCallback, useContext, memo } from \"react\";\r\nimport { START_GAME, TableContext } from \"./MineSearch\";\r\n\r\nconst Form = memo(() => {\r\n  const [row, setRow] = useState(10);\r\n  const [cell, setCell] = useState(10);\r\n  const [mine, setMine] = useState(20);\r\n  const { dispatch } = useContext(TableContext);\r\n\r\n  const onChangeRow = useCallback((e) => {\r\n    setRow(e.target.value);\r\n  }, []);\r\n\r\n  const onChangeCell = useCallback((e) => {\r\n    setCell(e.target.value);\r\n  }, []);\r\n\r\n  const onChangeMine = useCallback((e) => {\r\n    setMine(e.target.value);\r\n  }, []);\r\n\r\n  const onClickBtn = useCallback(() => {\r\n    dispatch({ type: START_GAME, row, cell, mine });\r\n  }, [row, cell, mine]);\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"세로\"\r\n        value={row}\r\n        onChange={onChangeRow}\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"가로\"\r\n        value={cell}\r\n        onChange={onChangeCell}\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"지뢰\"\r\n        value={mine}\r\n        onChange={onChangeMine}\r\n      />\r\n      <button onClick={onClickBtn}>시작</button>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Form;\r\n","import React, { useEffect, useReducer, createContext, useMemo } from \"react\";\nimport Table from \"./Table\";\nimport Form from \"./Form\";\n\nexport const CODE = {\n  MINE: -7,\n  NORMAL: -1,\n  QUESTION: -2,\n  FLAG: -3,\n  QUESTION_MINE: -4,\n  FLAG_MINE: -5,\n  CLICKED_MINE: -6,\n  OPENED: 0, // 0 이상이면 다 opened\n};\n\nexport const TableContext = createContext({\n  tableData: [],\n  halted: true,\n  dispatch: () => {},\n});\n\nconst initialState = {\n  tableData: [],\n  data: {\n    row: 0,\n    cell: 0,\n    mine: 0,\n  },\n  timer: 0,\n  result: \"\",\n  halted: true,\n  openedCount: 0,\n};\n\nconst plantMine = (row, cell, mine) => {\n  console.log(row, cell, mine);\n  const candidate = Array(row * cell)\n    .fill()\n    .map((arr, i) => {\n      return i;\n    });\n  const shuffle = [];\n  while (candidate.length > row * cell - mine) {\n    const chosen = candidate.splice(\n      Math.floor(Math.random() * candidate.length),\n      1\n    )[0];\n    shuffle.push(chosen);\n  }\n  const data = [];\n  for (let i = 0; i < row; i++) {\n    const rowData = [];\n    data.push(rowData);\n    for (let j = 0; j < cell; j++) {\n      rowData.push(CODE.NORMAL);\n    }\n  }\n\n  for (let k = 0; k < shuffle.length; k++) {\n    const ver = Math.floor(shuffle[k] / cell);\n    const hor = shuffle[k] % cell;\n    data[ver][hor] = CODE.MINE;\n  }\n\n  console.log(data);\n  return data;\n};\n\nexport const START_GAME = \"START_GAME\";\nexport const OPEN_CELL = \"OPEN_CELL\";\nexport const CLICK_MINE = \"CLICK_MINE\";\nexport const FLAG_CELL = \"FLAG_CELL\";\nexport const QUESTION_CELL = \"QUESTION_CELL\";\nexport const NORMALIZE_CELL = \"NORMALIZE_CELL\";\nexport const INCREMENT_TIMER = \"INCREMENT_TIMER\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case START_GAME:\n      return {\n        ...state,\n        data: {\n          row: action.row,\n          cell: action.cell,\n          mine: action.mine,\n        },\n        openedCount: 0,\n        tableData: plantMine(action.row, action.cell, action.mine),\n        halted: false,\n        timer: 0,\n      };\n    case OPEN_CELL: {\n      const tableData = [...state.tableData];\n      tableData.forEach((row, i) => {\n        tableData[i] = [...row];\n      });\n      const checked = [];\n      let openedCount = 0;\n      console.log(tableData.length, tableData[0].length);\n      const checkAround = (row, cell) => {\n        console.log(row, cell);\n        if (\n          row < 0 ||\n          row >= tableData.length ||\n          cell < 0 ||\n          cell >= tableData[0].length\n        ) {\n          return;\n        } // 상하좌우 없는칸은 안 열기\n        if (\n          [\n            CODE.OPENED,\n            CODE.FLAG,\n            CODE.FLAG_MINE,\n            CODE.QUESTION_MINE,\n            CODE.QUESTION,\n          ].includes(tableData[row][cell])\n        ) {\n          return;\n        } // 닫힌 칸만 열기\n        if (checked.includes(row + \"/\" + cell)) {\n          return;\n        } else {\n          checked.push(row + \"/\" + cell);\n        } // 한 번 연칸은 무시하기\n        let around = [tableData[row][cell - 1], tableData[row][cell + 1]];\n        if (tableData[row - 1]) {\n          around = around.concat([\n            tableData[row - 1][cell - 1],\n            tableData[row - 1][cell],\n            tableData[row - 1][cell + 1],\n          ]);\n        }\n        if (tableData[row + 1]) {\n          around = around.concat([\n            tableData[row + 1][cell - 1],\n            tableData[row + 1][cell],\n            tableData[row + 1][cell + 1],\n          ]);\n        }\n        const count = around.filter(function (v) {\n          return [CODE.MINE, CODE.FLAG_MINE, CODE.QUESTION_MINE].includes(v);\n        }).length;\n        if (count === 0) {\n          // 주변칸 오픈\n          if (row > -1) {\n            const near = [];\n            if (row - 1 > -1) {\n              near.push([row - 1, cell - 1]);\n              near.push([row - 1, cell]);\n              near.push([row - 1, cell + 1]);\n            }\n            near.push([row, cell - 1]);\n            near.push([row, cell + 1]);\n            if (row + 1 < tableData.length) {\n              near.push([row + 1, cell - 1]);\n              near.push([row + 1, cell]);\n              near.push([row + 1, cell + 1]);\n            }\n            near.forEach((n) => {\n              if (tableData[n[0]][n[1]] !== CODE.OPENED) {\n                checkAround(n[0], n[1]);\n              }\n            });\n          }\n        }\n        if (tableData[row][cell] === CODE.NORMAL) {\n          // 내 칸이 닫힌 칸이면 카운트 증가\n          openedCount += 1;\n        }\n        tableData[row][cell] = count;\n      };\n      checkAround(action.row, action.cell);\n      let halted = false;\n      let result = \"\";\n      console.log(\n        state.data.row * state.data.cell - state.data.mine,\n        state.openedCount,\n        openedCount\n      );\n      if (\n        state.data.row * state.data.cell - state.data.mine ===\n        state.openedCount + openedCount\n      ) {\n        // 승리\n        halted = true;\n        result = `${state.timer}초만에 승리하셨습니다`;\n      }\n      return {\n        ...state,\n        tableData,\n        openedCount: state.openedCount + openedCount,\n        halted,\n        result,\n      };\n    }\n    case CLICK_MINE: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      tableData[action.row][action.cell] = CODE.CLICKED_MINE;\n      return {\n        ...state,\n        tableData,\n        halted: true,\n      };\n    }\n    case FLAG_CELL: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      if (tableData[action.row][action.cell] === CODE.MINE) {\n        tableData[action.row][action.cell] = CODE.FLAG_MINE;\n      } else {\n        tableData[action.row][action.cell] = CODE.FLAG;\n      }\n      return {\n        ...state,\n        tableData,\n      };\n    }\n    case QUESTION_CELL: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      if (tableData[action.row][action.cell] === CODE.FLAG_MINE) {\n        tableData[action.row][action.cell] = CODE.QUESTION_MINE;\n      } else {\n        tableData[action.row][action.cell] = CODE.QUESTION;\n      }\n      return {\n        ...state,\n        tableData,\n      };\n    }\n    case NORMALIZE_CELL: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      if (tableData[action.row][action.cell] === CODE.QUESTION_MINE) {\n        tableData[action.row][action.cell] = CODE.MINE;\n      } else {\n        tableData[action.row][action.cell] = CODE.NORMAL;\n      }\n      return {\n        ...state,\n        tableData,\n      };\n    }\n    case INCREMENT_TIMER: {\n      return {\n        ...state,\n        timer: state.timer + 1,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst MineSearch = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { tableData, halted, timer, result } = state;\n\n  const value = useMemo(() => ({ tableData, halted, dispatch }), [\n    tableData,\n    halted,\n  ]);\n\n  useEffect(() => {\n    let timer;\n    if (halted === false) {\n      timer = setInterval(() => {\n        dispatch({ type: INCREMENT_TIMER });\n      }, 1000);\n    }\n    return () => {\n      clearInterval(timer);\n    };\n  }, [halted]);\n\n  return (\n    <TableContext.Provider value={value}>\n      <Form />\n      <div>{timer}</div>\n      <Table />\n      <div>{result}</div>\n    </TableContext.Provider>\n  );\n};\n\nexport default MineSearch;\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Navigation from \"./components/Navigation\";\nimport Home from \"./routes/Home/Home\";\nimport GuGuDan from \"./routes/GuGuDan/GuGuDan\";\nimport WordRelay from \"./routes/WordRelay/WordRelay\";\nimport NumberBaseball from \"./routes/NumberBaseball/NumberBaseball\";\nimport ResponseCheck from \"./routes/ResponseCheck/ResponseCheck\";\nimport RSP from \"./routes/RSP/RSP\";\nimport Lotto from \"./routes/Lotto/Lotto\";\nimport TicTacToe from \"./routes/TicTacToe/TicTacToe\";\nimport MineSearch from \"./routes/MineSearch/MineSearch\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/GuGuDan\" component={GuGuDan} />\n      <Route path=\"/WordRelay\" component={WordRelay} />\n      <Route path=\"/NumberBaseball\" component={NumberBaseball} />\n      <Route path=\"/ResponseCheck\" component={ResponseCheck} />\n      <Route path=\"/RSP\" component={RSP} />\n      <Route path=\"/Lotto\" component={Lotto} />\n      <Route path=\"/TicTacToe\" component={TicTacToe} />\n      <Route path=\"/MineSearch\" component={MineSearch} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}