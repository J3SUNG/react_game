[{"/J3SUNG/react_game/src/components/Navigation.js":"1","/J3SUNG/react_game/src/routes/NumberBaseball/try.jsx":"2","/J3SUNG/react_game/src/routes/GuGuDan/GuGuDan.jsx":"3","/J3SUNG/react_game/src/routes/Home/Home.jsx":"4","/J3SUNG/react_game/src/index.jsx":"5","/J3SUNG/react_game/src/App.jsx":"6","/J3SUNG/react_game/src/routes/WordRelay/WordRelay.jsx":"7","/J3SUNG/react_game/src/routes/ResponseCheck/ResponseCheck.jsx":"8","/J3SUNG/react_game/src/routes/NumberBaseball/NumberBaseball.jsx":"9","/J3SUNG/react_game/src/routes/TicTacToe/TicTacToe.jsx":"10","/J3SUNG/react_game/src/routes/RSP/RSP.jsx":"11","/J3SUNG/react_game/src/routes/MineSearch/MineSearch.jsx":"12","/J3SUNG/react_game/src/routes/Lotto/Lotto.jsx":"13","/J3SUNG/react_game/src/routes/Lotto/Ball.jsx":"14","/J3SUNG/react_game/src/routes/TicTacToe/Table.jsx":"15","/J3SUNG/react_game/src/routes/TicTacToe/Tr.jsx":"16","/J3SUNG/react_game/src/routes/TicTacToe/Td.jsx":"17","/J3SUNG/react_game/src/routes/MineSearch/Table.jsx":"18","/J3SUNG/react_game/src/routes/MineSearch/Form.jsx":"19","/J3SUNG/react_game/src/routes/MineSearch/Tr.jsx":"20","/J3SUNG/react_game/src/routes/MineSearch/Td.jsx":"21"},{"size":590,"mtime":1608260032360,"results":"22","hashOfConfig":"23"},{"size":513,"mtime":1608259784800,"results":"24","hashOfConfig":"23"},{"size":1088,"mtime":1608256267450,"results":"25","hashOfConfig":"23"},{"size":183,"mtime":1608256267450,"results":"26","hashOfConfig":"23"},{"size":171,"mtime":1608256267450,"results":"27","hashOfConfig":"23"},{"size":1293,"mtime":1608260154500,"results":"28","hashOfConfig":"23"},{"size":1027,"mtime":1608256267480,"results":"29","hashOfConfig":"23"},{"size":1558,"mtime":1608256267480,"results":"30","hashOfConfig":"23"},{"size":2259,"mtime":1608256267480,"results":"31","hashOfConfig":"23"},{"size":2872,"mtime":1608259784800,"results":"32","hashOfConfig":"23"},{"size":2212,"mtime":1608259784800,"results":"33","hashOfConfig":"23"},{"size":7562,"mtime":1608259835810,"results":"34","hashOfConfig":"23"},{"size":1911,"mtime":1608259784800,"results":"35","hashOfConfig":"23"},{"size":482,"mtime":1608256267450,"results":"36","hashOfConfig":"23"},{"size":468,"mtime":1608259835820,"results":"37","hashOfConfig":"23"},{"size":485,"mtime":1608256267480,"results":"38","hashOfConfig":"23"},{"size":455,"mtime":1608259784800,"results":"39","hashOfConfig":"23"},{"size":394,"mtime":1608259835810,"results":"40","hashOfConfig":"23"},{"size":1235,"mtime":1608259835810,"results":"41","hashOfConfig":"23"},{"size":433,"mtime":1608259835820,"results":"42","hashOfConfig":"23"},{"size":3113,"mtime":1608259835810,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"f8wp53",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},"/J3SUNG/react_game/src/components/Navigation.js",[],["93","94"],"/J3SUNG/react_game/src/routes/NumberBaseball/try.jsx",[],"/J3SUNG/react_game/src/routes/GuGuDan/GuGuDan.jsx",[],"/J3SUNG/react_game/src/routes/Home/Home.jsx",[],"/J3SUNG/react_game/src/index.jsx",[],"/J3SUNG/react_game/src/App.jsx",[],"/J3SUNG/react_game/src/routes/WordRelay/WordRelay.jsx",[],"/J3SUNG/react_game/src/routes/ResponseCheck/ResponseCheck.jsx",[],"/J3SUNG/react_game/src/routes/NumberBaseball/NumberBaseball.jsx",[],"/J3SUNG/react_game/src/routes/TicTacToe/TicTacToe.jsx",["95"],"import React, { useEffect, useReducer, useCallback } from \"react\";\nimport Table from \"./Table\";\nimport \"./TicTacToe.css\";\n\nconst initialState = {\n  winner: \"\",\n  turn: \"O\",\n  tableData: [\n    [\"\", \"\", \"\"],\n    [\"\", \"\", \"\"],\n    [\"\", \"\", \"\"],\n  ],\n  recentCell: [-1, -1],\n};\n\nexport const SET_WINNER = \"SET_WINNER\";\nexport const CLICK_CELL = \"CLICK_CELL\";\nexport const CHANGE_TURN = \"CHANGE_TURN\";\nexport const RESET_GAME = \"RESET_GAME\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_WINNER:\n      return {\n        ...state,\n        winner: action.winner,\n      };\n    case CLICK_CELL: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...tableData[action.row]];\n      tableData[action.row][action.cell] = state.turn;\n      return {\n        ...state,\n        tableData,\n        recentCell: [action.row, action.cell],\n      };\n    }\n    case CHANGE_TURN: {\n      return {\n        ...state,\n        turn: state.turn === \"O\" ? \"X\" : \"O\",\n      };\n    }\n    case RESET_GAME: {\n      return {\n        ...state,\n        tableData: [\n          [\"\", \"\", \"\"],\n          [\"\", \"\", \"\"],\n          [\"\", \"\", \"\"],\n        ],\n        recentCell: [-1, -1],\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst TicTacToe = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { tableData, turn, winner, recentCell } = state;\n  const onClickTable = useCallback(() => {\n    dispatch({ type: SET_WINNER, winner: \"O\" });\n  }, []);\n\n  useEffect(() => {\n    const [row, cell] = recentCell;\n    if (row < 0) {\n      return;\n    }\n    let win = false;\n    if (\n      tableData[row][0] === turn &&\n      tableData[row][1] === turn &&\n      tableData[row][2] === turn\n    ) {\n      win = true;\n    }\n    if (\n      tableData[0][cell] === turn &&\n      tableData[1][cell] === turn &&\n      tableData[2][cell] === turn\n    ) {\n      win = true;\n    }\n    if (\n      tableData[0][0] === turn &&\n      tableData[1][1] === turn &&\n      tableData[2][2] === turn\n    ) {\n      win = true;\n    }\n    if (\n      tableData[0][2] === turn &&\n      tableData[1][1] === turn &&\n      tableData[2][0] === turn\n    ) {\n      win = true;\n    }\n    if (win) {\n      dispatch({ type: SET_WINNER, winner: turn });\n      dispatch({ type: RESET_GAME });\n    } else {\n      let all = true;\n      tableData.forEach((row) => {\n        row.forEach((cell) => {\n          if (!cell) {\n            all = false;\n          }\n        });\n      });\n      if (all) {\n        dispatch({ type: RESET_GAME });\n      } else {\n        dispatch({ type: CHANGE_TURN });\n      }\n    }\n  }, [recentCell]);\n\n  return (\n    <>\n      <Table\n        onClick={onClickTable}\n        tableData={state.tableData}\n        dispatch={dispatch}\n      />\n      {state.winner && <div>{state.winner}님의 승리</div>}\n    </>\n  );\n};\n\nexport default TicTacToe;\n","/J3SUNG/react_game/src/routes/RSP/RSP.jsx",["96"],"import React, { useState, useRef, useEffect } from \"react\";\nimport \"./RSP.css\";\n\nconst rspCoords = {\n  바위: \"0\",\n  가위: \"-142px\",\n  보: \"-284px\",\n};\n\nconst scores = {\n  가위: 1,\n  바위: 0,\n  보: -1,\n};\n\nconst computerChoice = (imgCoord) => {\n  return Object.entries(rspCoords).find(function (v) {\n    return v[1] === imgCoord;\n  })[0];\n};\n\nconst RSP = () => {\n  const [result, setResult] = useState(\"\");\n  const [imgCoord, setImgCoord] = useState(rspCoords.바위);\n  const [score, setScore] = useState(0);\n  const interval = useRef();\n\n  useEffect(() => {\n    console.log(\"다시 실행\");\n    interval.current = setInterval(changeHand, 100);\n    return () => {\n      console.log(\"종료\");\n      clearInterval(interval.current);\n    };\n  }, [imgCoord]);\n\n  const changeHand = () => {\n    if (imgCoord === rspCoords.바위) {\n      setImgCoord(rspCoords.가위);\n    } else if (imgCoord === rspCoords.가위) {\n      setImgCoord(rspCoords.보);\n    } else if (imgCoord === rspCoords.보) {\n      setImgCoord(rspCoords.바위);\n    }\n  };\n\n  const onClickBtn = (choice) => () => {\n    if (interval.current) {\n      clearInterval(interval.current);\n      interval.current = null;\n      const myScore = scores[choice];\n      const cpuScore = scores[computerChoice(imgCoord)];\n      const diff = myScore - cpuScore;\n      if (diff === 0) {\n        setResult(\"비겼습니다!\");\n      } else if ([-1, 2].includes(diff)) {\n        setResult(\"이겼습니다!\");\n        setScore((prevScore) => prevScore + 1);\n      } else {\n        setResult(\"졌습니다!\");\n        setScore((prevScore) => prevScore - 1);\n      }\n      setTimeout(() => {\n        interval.current = setInterval(changeHand, 100);\n      }, 1000);\n    }\n  };\n\n  return (\n    <>\n      <div\n        id=\"computer\"\n        style={{\n          background: `url(https://en.pimg.jp/023/182/267/1/23182267.jpg) ${imgCoord} 0`,\n        }}\n      />\n      <div>\n        <button id=\"rock\" className=\"btn\" onClick={onClickBtn(\"바위\")}>\n          바위\n        </button>\n        <button id=\"scissor\" className=\"btn\" onClick={onClickBtn(\"가위\")}>\n          가위\n        </button>\n        <button id=\"paper\" className=\"btn\" onClick={onClickBtn(\"보\")}>\n          보\n        </button>\n      </div>\n      <div>{result}</div>\n      <div>현재 {score}점</div>\n    </>\n  );\n};\nexport default RSP;\n","/J3SUNG/react_game/src/routes/MineSearch/MineSearch.jsx",[],"/J3SUNG/react_game/src/routes/Lotto/Lotto.jsx",[],"/J3SUNG/react_game/src/routes/Lotto/Ball.jsx",[],"/J3SUNG/react_game/src/routes/TicTacToe/Table.jsx",["97"],"import React from \"react\";\r\nimport TicTacToe from \"./TicTacToe\";\r\nimport Tr from \"./Tr\";\r\n\r\nconst Table = ({ onClick, tableData, dispatch }) => {\r\n  return (\r\n    <table className=\"ttt\">\r\n      <tbody>\r\n        {Array(tableData.length)\r\n          .fill()\r\n          .map((tr, i) => (\r\n            <Tr\r\n              key={i}\r\n              dispatch={dispatch}\r\n              rowIndex={i}\r\n              rowData={tableData[i]}\r\n            />\r\n          ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","/J3SUNG/react_game/src/routes/TicTacToe/Tr.jsx",[],"/J3SUNG/react_game/src/routes/TicTacToe/Td.jsx",[],["98","99"],"/J3SUNG/react_game/src/routes/MineSearch/Table.jsx",[],"/J3SUNG/react_game/src/routes/MineSearch/Form.jsx",["100"],"import React, { useState, useCallback, useContext, memo } from \"react\";\r\nimport { START_GAME, TableContext } from \"./MineSearch\";\r\n\r\nconst Form = memo(() => {\r\n  const [row, setRow] = useState(10);\r\n  const [cell, setCell] = useState(10);\r\n  const [mine, setMine] = useState(20);\r\n  const { dispatch } = useContext(TableContext);\r\n\r\n  const onChangeRow = useCallback((e) => {\r\n    setRow(e.target.value);\r\n  }, []);\r\n\r\n  const onChangeCell = useCallback((e) => {\r\n    setCell(e.target.value);\r\n  }, []);\r\n\r\n  const onChangeMine = useCallback((e) => {\r\n    setMine(e.target.value);\r\n  }, []);\r\n\r\n  const onClickBtn = useCallback(() => {\r\n    dispatch({ type: START_GAME, row, cell, mine });\r\n  }, [row, cell, mine]);\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"세로\"\r\n        value={row}\r\n        onChange={onChangeRow}\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"가로\"\r\n        value={cell}\r\n        onChange={onChangeCell}\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"지뢰\"\r\n        value={mine}\r\n        onChange={onChangeMine}\r\n      />\r\n      <button onClick={onClickBtn}>시작</button>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Form;\r\n","/J3SUNG/react_game/src/routes/MineSearch/Tr.jsx",[],"/J3SUNG/react_game/src/routes/MineSearch/Td.jsx",["101","102","103","104","105"],"import React, { useContext, useCallback, useMemo, memo } from \"react\";\r\nimport {\r\n  CLICK_MINE,\r\n  CODE,\r\n  FLAG_CELL,\r\n  NORMALIZE_CELL,\r\n  OPEN_CELL,\r\n  QUESTION_CELL,\r\n  TableContext,\r\n} from \"./MineSearch\";\r\n\r\nconst getTdStyle = (code) => {\r\n  switch (code) {\r\n    case CODE.NORMAL:\r\n    case CODE.MINE:\r\n      return {\r\n        background: \"#444\",\r\n      };\r\n    case CODE.CLICKED_MINE:\r\n    case CODE.OPENED:\r\n      return {\r\n        background: \"white\",\r\n      };\r\n    case CODE.QUESTION_MINE:\r\n    case CODE.QUESTION:\r\n      return {\r\n        background: \"yellow\",\r\n      };\r\n    case CODE.FLAG_MINE:\r\n    case CODE.FLAG:\r\n      return {\r\n        background: \"red\",\r\n      };\r\n    default:\r\n      return {\r\n        background: \"white\",\r\n      };\r\n  }\r\n};\r\n\r\nconst getTdText = (code) => {\r\n  console.log(\"getTdtext\");\r\n  switch (code) {\r\n    case CODE.NORMAL:\r\n      return \"\";\r\n    case CODE.MINE:\r\n      return \"X\";\r\n    case CODE.CLICKED_MINE:\r\n      return \"펑\";\r\n    case CODE.FLAG_MINE:\r\n    case CODE.FLAG:\r\n      return \"!\";\r\n    case CODE.QUESTION_MINE:\r\n    case CODE.QUESTION:\r\n      return \"?\";\r\n    default:\r\n      return code || \"\";\r\n  }\r\n};\r\n\r\nconst Td = memo(({ rowIndex, cellIndex }) => {\r\n  const { tableData, dispatch, halted } = useContext(TableContext);\r\n\r\n  const onClickTd = useCallback(() => {\r\n    if (halted) {\r\n      return;\r\n    }\r\n    switch (tableData[rowIndex][cellIndex]) {\r\n      case CODE.OPENED:\r\n      case CODE.FLAG_MINE:\r\n      case CODE.FLAG:\r\n      case CODE.QUESTION_MINE:\r\n      case CODE.QUESTION:\r\n        return;\r\n      case CODE.NORMAL:\r\n        dispatch({ type: OPEN_CELL, row: rowIndex, cell: cellIndex });\r\n        return;\r\n      case CODE.MINE:\r\n        dispatch({ type: CLICK_MINE, row: rowIndex, cell: cellIndex });\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  }, [tableData[rowIndex][cellIndex], halted]);\r\n\r\n  const onRightClickTd = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (halted) {\r\n        return;\r\n      }\r\n      switch (tableData[rowIndex][cellIndex]) {\r\n        case CODE.NORMAL:\r\n        case CODE.MINE:\r\n          dispatch({ type: FLAG_CELL, row: rowIndex, cell: cellIndex });\r\n          return;\r\n        case CODE.FLAG_MINE:\r\n        case CODE.FLAG:\r\n          dispatch({ type: QUESTION_CELL, row: rowIndex, cell: cellIndex });\r\n          return;\r\n        case CODE.QUESTION_MINE:\r\n        case CODE.QUESTION:\r\n          dispatch({ type: NORMALIZE_CELL, row: rowIndex, cell: cellIndex });\r\n          return;\r\n        default:\r\n          return;\r\n      }\r\n    },\r\n    [tableData[rowIndex][cellIndex], halted]\r\n  );\r\n\r\n  console.log(\"td rendered\");\r\n\r\n  return (\r\n    <RealTd\r\n      onClickTd={onClickTd}\r\n      onRightClickTd={onRightClickTd}\r\n      data={tableData[rowIndex][cellIndex]}\r\n    />\r\n  );\r\n});\r\n\r\nconst RealTd = memo(({ onClickTd, onRightClickTd, data }) => {\r\n  console.log(\"real td rendered\");\r\n  return (\r\n    <td\r\n      style={getTdStyle(data)}\r\n      onClick={onClickTd}\r\n      onContextMenu={onRightClickTd}\r\n    >\r\n      {getTdText(data)}\r\n    </td>\r\n  );\r\n});\r\n\r\nexport default Td;\r\n",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":123,"column":6,"nodeType":"112","endLine":123,"endColumn":18,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":35,"column":6,"nodeType":"112","endLine":35,"endColumn":16,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":17},{"ruleId":"106","replacedBy":"120"},{"ruleId":"108","replacedBy":"121"},{"ruleId":"110","severity":1,"message":"122","line":24,"column":6,"nodeType":"112","endLine":24,"endColumn":23,"suggestions":"123"},{"ruleId":"116","severity":1,"message":"124","line":1,"column":42,"nodeType":"118","messageId":"119","endLine":1,"endColumn":49},{"ruleId":"110","severity":1,"message":"125","line":84,"column":6,"nodeType":"112","endLine":84,"endColumn":46,"suggestions":"126"},{"ruleId":"110","severity":1,"message":"127","line":84,"column":7,"nodeType":"128","endLine":84,"endColumn":37},{"ruleId":"110","severity":1,"message":"125","line":109,"column":5,"nodeType":"112","endLine":109,"endColumn":45,"suggestions":"129"},{"ruleId":"110","severity":1,"message":"127","line":109,"column":6,"nodeType":"128","endLine":109,"endColumn":36},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'tableData' and 'turn'. Either include them or remove the dependency array.","ArrayExpression",["132"],"React Hook useEffect has a missing dependency: 'changeHand'. Either include it or remove the dependency array.",["133"],"no-unused-vars","'TicTacToe' is defined but never used.","Identifier","unusedVar",["130"],["131"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["134"],"'useMemo' is defined but never used.","React Hook useCallback has missing dependencies: 'cellIndex', 'dispatch', 'rowIndex', and 'tableData'. Either include them or remove the dependency array.",["135"],"React Hook useCallback has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression",["136"],"no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"143","fix":"145"},"Update the dependencies array to be: [recentCell, tableData, turn]",{"range":"146","text":"147"},"Update the dependencies array to be: [changeHand, imgCoord]",{"range":"148","text":"149"},"Update the dependencies array to be: [dispatch, row, cell, mine]",{"range":"150","text":"151"},"Update the dependencies array to be: [cellIndex, dispatch, halted, rowIndex, tableData]",{"range":"152","text":"153"},{"range":"154","text":"153"},[2739,2751],"[recentCell, tableData, turn]",[719,729],"[changeHand, imgCoord]",[696,713],"[dispatch, row, cell, mine]",[1837,1877],"[cellIndex, dispatch, halted, rowIndex, tableData]",[2575,2615]]